{"version":3,"sources":["Components/Read/EmployeeTable.js","Components/Read/Home.js","Components/Update/EditEmployee.js","Components/Create/AddEmployee.js","Components/Delete/DeleteEmployee.js","serviceWorker.js","index.js","Components/App/App.js"],"names":["EmployeeTable","props","class","employees","length","map","employee","key","employee_id","first_name","last_name","email","phone","to","title","colSpan","Home","useState","setEmployees","useEffect","axios","get","then","res","data","catch","err","console","log","EditEmployee","toHome","setToHome","firstName","setFirstName","lastName","setLastName","emailAddress","setEmailAddress","phoneNumber","setPhoneNumber","setData","singleEmployeeId","match","params","id","handleUpdate","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","index","onSubmit","type","name","placeholder","value","onChange","target","required","pattern","AddEmployee","handleSubmit","handleDelete","Boolean","window","location","hostname","ReactDOM","render","className","exact","path","component","DeleteEmployee","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c21941cb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst EmployeeTable = props => (\r\n  <div class='container'>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Phone Number</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.employees.length > 0 ? (\r\n        props.employees.map(employee => (\r\n          <tr key={employee.employee_id}>\r\n            <td>{employee.employee_id}</td>\r\n            <td>{employee.first_name} {employee.last_name}</td>\r\n            <td>{employee.email}</td>\r\n            <td>{employee.phone}</td>\r\n            <td class='action-column'>\r\n              <td>\r\n                <Link to={'/edit/'+ employee.employee_id}>\r\n                  <button title='Edit Employee' class=\"fas fa-pen\"></button>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <Link to={'/delete/'+ employee.employee_id}>\r\n                  <button title='Delete Employee' class=\"fas fa-trash-alt\"></button>\r\n                </Link>\r\n              </td>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={5}>No Employees</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n  </div>\r\n)\r\n\r\nexport default EmployeeTable","import React, { useState, useEffect } from 'react'\r\nimport EmployeeTable from './EmployeeTable'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Home = () => {\r\n  const [employees, setEmployees] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://employee-management-insideout.herokuapp.com/employees\")\r\n      .then(res => {\r\n        setEmployees(res.data)\r\n      })\r\n      \r\n      .catch(err => {console.log(err)})\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee Management</h1>\r\n      <div>\r\n        <div>\r\n          <EmployeeTable employees={employees}/>\r\n          <Link to ='/add'>\r\n            <button title='Add Employee' class=\"fas fa-user-plus add\"></button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst EditEmployee = props => {\r\n  const [toHome, setToHome] = useState(false)\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [emailAddress, setEmailAddress] = useState('')\r\n  const [phoneNumber, setPhoneNumber] = useState('')\r\n\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const singleEmployeeId = props.match.params.id\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://employee-management-insideout.herokuapp.com/employee/${singleEmployeeId}`)\r\n      .then(res => {\r\n        setData(res.data)\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  },[])\r\n\r\n  const handleUpdate= async (e) => {\r\n    e.preventDefault()\r\n    await fetch(`https://employee-management-insideout.herokuapp.com/employee/update/${singleEmployeeId}`, {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        'first_name':firstName,\r\n        'last_name':lastName,\r\n        'email':emailAddress,\r\n        'phone':phoneNumber,\r\n      })\r\n    })\r\n    await setToHome(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {toHome ? <Redirect to='/'/>:null}\r\n      \r\n      {data.map((employee, index) => (\r\n        <div key={index} employee={employee}> \r\n          <h3>Update {employee.first_name} {employee.last_name}</h3>\r\n        </div>\r\n      ))}\r\n\r\n      <form onSubmit={handleUpdate}>\r\n        <input type='text' \r\n          name='firstName' \r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)} \r\n          required \r\n        />\r\n\r\n        <input type='text' \r\n          name='lastName' \r\n          placeholder='Last Name' \r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)} \r\n          required \r\n        />\r\n\r\n        <input type='email' \r\n          name='email' \r\n          placeholder='Email Address' \r\n          value={emailAddress}\r\n          onChange={e => setEmailAddress(e.target.value)} \r\n          required \r\n        />\r\n\r\n        <input type='tel' \r\n          name='phone'\r\n          pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' \r\n          placeholder='Phone Number' \r\n          value={phoneNumber}\r\n          onChange={e => setPhoneNumber(e.target.value)} \r\n          required \r\n        />\r\n        <nav>\r\n          <Link to='/'>\r\n            <button title='Cancel' class=\"fas fa-ban deny\"></button>\r\n          </Link>\r\n          <button title='Confirm' type='submit' class=\"far fa-check-circle confirm\"></button>\r\n        </nav>\r\n      </form>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditEmployee","import React, { useState } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst AddEmployee = () => {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [emailAddress, setEmailAddress] = useState('')\r\n  const [phoneNumber, setPhoneNumber] = useState('')\r\n  const [toHome, setToHome] = useState(false)\r\n\r\n\r\n  const handleSubmit= async (e) => {\r\n    e.preventDefault()\r\n    await fetch('https://employee-management-insideout.herokuapp.com/employee',{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        'first_name':firstName,\r\n        'last_name':lastName,\r\n        'email':emailAddress,\r\n        'phone':phoneNumber,\r\n      })\r\n    })\r\n    await setToHome(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <h1>Add Employee</h1>\r\n    {toHome ? <Redirect to='/'/>:null}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type='text' \r\n          name='firstName' \r\n          placeholder='First Name' \r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)} \r\n          required \r\n        />\r\n\r\n        <input type='text' \r\n        name='lastName' \r\n        placeholder='Last Name' \r\n        value={lastName}\r\n        onChange={e => setLastName(e.target.value)} \r\n        required \r\n        />\r\n\r\n        <input type='email' \r\n        name='email' \r\n        placeholder='Email Address' \r\n        value={emailAddress}\r\n        onChange={e => setEmailAddress(e.target.value)} \r\n        required \r\n        />\r\n\r\n        <input type='tel' \r\n        name='phone'\r\n        pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' \r\n        placeholder='Phone Number' \r\n        value={phoneNumber}\r\n        onChange={e => setPhoneNumber(e.target.value)} \r\n        required \r\n        />\r\n        <nav>\r\n          <Link to='/'>\r\n            <button title='Cancel' class=\"fas fa-ban deny\"></button>\r\n          </Link>\r\n          <button title='Confirm' type=\"submit\" class=\"far fa-check-circle confirm\"></button>\r\n        </nav>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEmployee","import React, { useState, useEffect } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst EditEmployee = props => {\r\n  const [toHome, setToHome] = useState(false)\r\n  const [data, setData] = useState([])\r\n\r\n  const singleEmployeeId = props.match.params.id\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://employee-management-insideout.herokuapp.com/employee/${singleEmployeeId}`)\r\n      .then(res => {\r\n        setData(res.data)\r\n      })\r\n      .catch(err => {console.log(err)})\r\n  },[])\r\n\r\n  const handleDelete= async (e) => {\r\n    e.preventDefault()\r\n    await fetch (`https://employee-management-insideout.herokuapp.com/employee/delete/${singleEmployeeId}`, {\r\n      method: \"DELETE\"\r\n    })\r\n    await setToHome(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {toHome ? <Redirect to='/'/>:null}\r\n\r\n    {data.map((employee, index) => (\r\n      <div key={index} employee={employee}> \r\n        <h3>Are you sure you want to delete {employee.first_name} {employee.last_name}?</h3>\r\n      </div>\r\n    ))}\r\n\r\n      <form onSubmit={handleDelete}>   \r\n        <Link to='/'>\r\n          <button title='Cancel' class=\"fas fa-ban deny\"></button>\r\n        </Link>\r\n        <button title='Confirm' type=\"submit\" class=\"far fa-check-circle confirm\"></button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditEmployee","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport '../../Styles/App.scss'\nimport Home from '../Read/Home'\nimport EditEmployee from '../Update/EditEmployee'\nimport AddEmployee from '../Create/AddEmployee'\nimport DeleteEmployee from '../Delete/DeleteEmployee'\n\nexport default () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/add\" component={AddEmployee} />\n        <Route exact path=\"/edit/:id\" component={EditEmployee} />\n        <Route exact path=\"/delete/:id\" component={DeleteEmployee} />\n      </Switch>\n    </div>\n  )\n}\n"],"sourceRoot":""}